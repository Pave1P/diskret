import numpy as np
from itertools import product, combinations
from collections import Counter

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–¥–∞
n = 21  # –¥–ª–∏–Ω–∞ –∫–æ–¥–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞
k = 15  # –¥–ª–∏–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
r = n - k

# –ü–æ—Ä–æ–∂–¥–∞—é—â–∏–π –º–Ω–æ–≥–æ—á–ª–µ–Ω g(x) = x^6 + x^4 + x^2 + x + 1 ‚Üí 1010111
g = [1, 0, 1, 0, 1, 1, 1]

# –ü–æ—Å—Ç—Ä–æ–∏–º –ø–æ—Ä–æ–∂–¥–∞—é—â—É—é –º–∞—Ç—Ä–∏—Ü—É G (—Ä–∞–∑–º–µ—Ä k x n)
G = np.zeros((k, n), dtype=int)
for i in range(k):
    G[i, i:i+len(g)] = g
print(G)
# –°–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ (u)
codewords = []
for u_bits in product([0, 1], repeat=k):
    u = np.array(u_bits)
    v = np.dot(u, G) % 2
    codewords.append(v)

print(f"\n‚úÖ –í—Å–µ–≥–æ –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤: {len(codewords)}")

# –§—Ä–∞–≥–º–µ–Ω—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤ (–ø–µ—Ä–≤—ã–µ 10)
print("\nüì¶ –§—Ä–∞–≥–º–µ–Ω—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤ (–ø–µ—Ä–≤—ã–µ 10):")
for idx, cw in enumerate(codewords[:10]):
    print(f"{idx+1}: {''.join(map(str, cw))}")

# –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–∞–±–ª–∏—Ü—ã —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π
min_distance = n
distance_counter = Counter()
sample_size = 10  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π

print("\nüìè –§—Ä–∞–≥–º–µ–Ω—Ç —Ç–∞–±–ª–∏—Ü—ã —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –•—ç–º–º–∏–Ω–≥–∞ –º–µ–∂–¥—É –ø–µ—Ä–≤—ã–º–∏ 20 –∫–æ–¥–æ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:")
for i, j in combinations(range(sample_size), 2):
    dist = np.sum(codewords[i] != codewords[j])
    distance_counter[dist] += 1
    if 0 < dist < min_distance:
        min_distance = dist
    print(f" (—Å–ª–æ–≤–æ {i+1}, —Å–ª–æ–≤–æ {j+1}): —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ = {dist}")

# –°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
print("\nüìä –°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π (–≤–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ):")
for dist in sorted(distance_counter):
    print(f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ {dist}: {distance_counter[dist]} —Ä–∞–∑")

print(f"\nüîç –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–¥–æ–≤–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–≤ –ø–æ–ª–Ω–æ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ): d_min = {min_distance}")
