import networkx as nx
import matplotlib.pyplot as plt
import random

# === –ò—Å—Ö–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ –∏–∑ —É—Å–ª–æ–≤–∏—è ===
edges = [
    ('S', '1', 5), ('S', '2', 7), ('S', '3', 3),
    ('1', '2', 3), ('1', '4', 4), ('3', '2', 6),
    ('3', '6', 5), ('2', '7', 9),
     ('4', '2', 2),
    ('4', '5', 7), ('5', '2', 6), ('5', '7', 5),
    ('5', 'T', 7), ('5', '9', 5), ('9', 'T', 9),
    ('7', '8', 4), ('6', '7', 3), ('6', '8', 3),
    ('8', 'T', 9),('6', '2', 9)
]

def create_graph(edge_list):
    G = nx.DiGraph()
    for u, v, capacity in edge_list:
        G.add_edge(u, v, capacity=capacity)
    return G

def compute_flow_and_cut(G, source='S', sink='T'):
    flow_value, flow_dict = nx.maximum_flow(G, source, sink)
    cut_value, partition = nx.minimum_cut(G, source, sink)
    reachable, non_reachable = partition
    return flow_value, cut_value, sorted(reachable), sorted(non_reachable), flow_dict

def draw_graph(G, title):
    pos = nx.spring_layout(G, seed=42)
    edge_labels = {(u, v): f"{d['capacity']}" for u, v, d in G.edges(data=True)}
    plt.figure(figsize=(10, 6))
    nx.draw(G, pos, with_labels=True, node_color='skyblue', node_size=1500, font_size=12)
    nx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels)
    nx.draw_networkx_edges(G, pos, arrowstyle='->', arrowsize=15)
    plt.title(title)
    plt.show()

# === –ß–∞—Å—Ç—å 1: –∏—Å—Ö–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ ===
G1 = create_graph(edges)
flow1, cut1, reach1, nreach1, flow_dict1 = compute_flow_and_cut(G1)
print("üîπ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –ò–°–•–û–î–ù–û–ì–û –≥—Ä–∞—Ñ–∞:")
print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫: {flow1}")
print(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–µ–∑: {cut1}")

draw_graph(G1, "–ò—Å—Ö–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ (–∑–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–ø—É—Å–∫–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏)")

# === –ß–∞—Å—Ç—å 2: —Å–ª—É—á–∞–π–Ω—ã–µ –ø—Ä–æ–ø—É—Å–∫–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –æ—Ç 100 –¥–æ 1000 ===
random_edges = [(u, v, random.randint(100, 1000)) for u, v, _ in edges]
G2 = create_graph(random_edges)
flow2, cut2, reach2, nreach2, flow_dict2 = compute_flow_and_cut(G2)
print("\nüîπ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –°–õ–£–ß–ê–ô–ù–û–ì–û –≥—Ä–∞—Ñ–∞:")
print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫: {flow2}")
print(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–µ–∑: {cut2}")

draw_graph(G2, "–ì—Ä–∞—Ñ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ø—Ä–æ–ø—É—Å–∫–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏ [100, 1000]")
